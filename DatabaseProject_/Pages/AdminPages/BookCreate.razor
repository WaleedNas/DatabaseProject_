@page "/BookCreate"
@inject NavigationManager navManager
@inject IUserData userData
@inject IBookData bookData
@inject IAuthorData authorData
@inject IJSRuntime JS

<h1>Add Book</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="bookModel" method="post">
            <div class="group-left">
                <div class="form-group">
                    <label >Title</label>
                    <InputText @bind-Value="@bookModel.Title" type="text" id="title" name="title" required />
                </div>
                <div class="form-group">
                    <label >Description</label>
                    <InputText @bind-Value="@bookModel.Description" type="text" id="desc" name="desc" required />
                </div>
                <div class="form-group">
                    <label>Publication Date</label>
                    <InputDate TValue="DateTime?" @bind-Value="@bookModel.PublicationDate"  id="date" name="date" required />
                </div>


            </div>
            <div class="group-right">

                <div class="form-group">
                    <label >Price</label>
                    <InputNumber TValue="decimal" @bind-Value="@bookModel.Price" id="price" name="price" required />
                </div>
                <div class="form-group">
                    <label >Publisher</label>
                    <InputText @bind-Value="@bookModel.Publisher" typeof="text" id="pub" name="pub" required />
                </div>
                <div class="form-group">
                    <label >Quantity Available</label>
                    <InputNumber TValue="int" @bind-Value="@bookModel.QuantityAvailable" id="q" name="q" required />
                </div>
                <div class="form-group">
                    <label>Author</label>
                    <InputSelect TValue="int" @bind-Value="@authorId">
                        @foreach (var author in authors)
                        {
                            <option value="@author.AuthorId"> @author.FirstName @author.LastName</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <input @onclick="HandleSubmit" style="margin:10px 0 10px 0" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </EditForm>
    </div>
</div>

<div>
    <a class="btn btn-primary" href="javascript: history.go(-1)">Back to List</a>
</div>
    @code {
    Book bookModel = new Book();
    List<Author> authors = new List<Author>();
    User admin = new User();
    string message = "";
    int Id;
    bool notAdmin = false;
    int authorId;

    protected async override Task OnInitializedAsync()
    {
        var uri = new Uri(navManager.Uri);

        var queryString = uri.Query;

        if (!string.IsNullOrWhiteSpace(queryString))
        {
            Id = int.Parse(queryString.Substring(1));
        }

        try
        {
            admin = await userData.GetUser(Id);
        }
        catch (Exception e)
        { }

        if (admin.UserType != UserType.Admin)
        {
            notAdmin = true;
        }
        IEnumerable<Author> authI = await authorData.GetAuthors();
        authors = authI.ToList();
    }


    private async Task HandleSubmit()
    {
        try
        {
            var response = await bookData.InsertBook(bookModel);

        }
        catch (Exception e)
        {
            message = "Book Already Exists";
        }

        navManager.NavigateTo("/AdminBooks?" + admin.UserId);

    }

}
