@page "/shop"
@using DatabaseProject_.Util
@inject NavigationManager navManager
@inject DataAccess.DBAccess.ISqlDataAccess db
@inject IUserData userData
@inject IJSRuntime JS

<PageTitle>Shop</PageTitle>


<section class="shop_section layout_padding">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Popular Books
            </h2>
        </div>
        <div class="row">
            @foreach (Book book in books)
            {
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="box">
                        <a href=@($"/view/{book.BookId}?"+Id)>
                            <div class="img-box">
                                <img src=@ImageConverter.BytesToSrc(book.CoverImage) alt="Book Cover">
                            </div>
                            <div class="detail-box">
                                <h6>
                                    @book.Title
                                </h6>
                                <h6>
                                    Price
                                    <span>
                                        $@book.Price
                                    </span>
                                </h6>
                            </div>
                            <div class="new">
                                <span>
                                    New
                                </span>
                            </div>
                        </a>
                    </div>
                </div>
            }

        </div>
        <div class="btn-box">
            <a href="/shop">
                View All Products
            </a>
        </div>
    </div>
</section>

@code {
    int Id;
    User userModel = new User();
    IEnumerable<Book> books = new List<Book>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var uri = new Uri(navManager.Uri);

            var queryString = uri.Query;
            if (!string.IsNullOrWhiteSpace(queryString))
            {
                Id = int.Parse(queryString.Substring(1));
            }
            try
            {
                userModel = await userData.GetUser(Id);
            }
            catch (Exception e)
            {

            }
            await JS.InvokeVoidAsync("console.log", userModel);
            var bookData = new BookData(db);
            books = await bookData.GetBooks();
        }
        catch (Exception e)
        {
            //Armando
            //RDI16WYN4BT
        }
    }

}
